#!/usr/bin/python3
#+
# Python version of this <https://github.com/npmgod/Corporate-Ipsum>
# corporatese travesty generator.
#-

import sys
import random
import getopt

#+
# The text database
#-

words = \
    {
        "adverbs" :
            [
                "appropriately",
                "assertively",
                "authoritatively",
                "collaboratively",
                "compellingly",
                "competently",
                "completely",
                "continually",
                "conveniently",
                "credibly",
                "distinctively",
                "dramatically",
                "dynamically",
                "efficiently",
                "energistically",
                "enthusiastically",
                "fungibly",
                "globally",
                "holisticly",
                "interactively",
                "intrinsically",
                "monotonically",
                "objectively",
                "phosfluorescently",
                "proactively",
                "professionally",
                "progressively",
                "quickly",
                "rapidiously",
                "seamlessly",
                "synergistically",
                "uniquely",
            ],
        "verbs" :
            [
                "actualize",
                "administrate",
                "aggregate",
                "architect",
                "benchmark",
                "brand",
                "build",
                "cloudify",
                "communicate",
                "conceptualize",
                "coordinate",
                "create",
                "cultivate",
                "customize",
                "deliver",
                "deploy",
                "develop",
                "disintermediate",
                "disseminate",
                "drive",
                "embrace",
                "e-enable",
                "empower",
                "enable",
                "engage",
                "engineer",
                "enhance",
                "envisioneer",
                "evisculate",
                "evolve",
                "expedite",
                "exploit",
                "extend",
                "fabricate",
                "facilitate",
                "fashion",
                "formulate",
                "foster",
                "generate",
                "grow",
                "harness",
                "impact",
                "implement",
                "incentivize",
                "incubate",
                "initiate",
                "innovate",
                "integrate",
                "iterate",
                "leverage existing",
                "leverage others’",
                "maintain",
                "matrix",
                "maximize",
                "mesh",
                "monetize",
                "morph",
                "myocardinate",
                "negotiate",
                "network",
                "optimize",
                "orchestrate",
                "parallel task",
                "plagiarize",
                "pontificate",
                "predominate",
                "procrastinate",
                "productivate",
                "productize",
                "promote",
                "provide access to",
                "pursue",
                "recaptiualize",
                "reconceptualize",
                "redefine",
                "re-engineer",
                "reintermediate",
                "reinvent",
                "repurpose",
                "restore",
                "revolutionize",
                "right-shore",
                "scale",
                "seize",
                "simplify",
                "strategize",
                "streamline",
                "supply",
                "syndicate",
                "synergize",
                "synthesize",
                "target",
                "transform",
                "transition",
                "underwhelm",
                "unleash",
                "utilize",
                "visualize",
                "whiteboard",
            ],
        "adjectives" :
            [
                "24/7",
                "24/365",
                "accurate",
                "adaptive",
                "agile",
                "alternative",
                "an expanded array of",
                "B2B",
                "B2C",
                "backend",
                "backward-compatible",
                "best-of-breed",
                "bleeding-edge",
                "bricks-and-clicks",
                "business",
                "clicks-and-mortar",
                "client-based",
                "client-centered",
                "client-centric",
                "client-focused",
                "cloud-based",
                "cloud-centric",
                "cloudified",
                "collaborative",
                "compelling",
                "competitive",
                "cooperative",
                "corporate",
                "cost effective",
                "covalent",
                "cross functional",
                "cross-media",
                "cross-platform",
                "cross-unit",
                "customer directed",
                "customized",
                "cutting-edge",
                "distinctive",
                "distributed",
                "diverse",
                "dynamic",
                "e-business",
                "economically sound",
                "effective",
                "efficient",
                "elastic",
                "emerging",
                "empowered",
                "enabled",
                "end-to-end",
                "enterprise",
                "enterprise-wide",
                "equity invested",
                "error-free",
                "ethical",
                "excellent",
                "exceptional",
                "extensible",
                "extensive",
                "flexible",
                "focused",
                "frictionless",
                "front-end",
                "fully researched",
                "fully tested",
                "functional",
                "functionalized",
                "fungible",
                "future-proof",
                "global",
                "go forward",
                "goal-oriented",
                "granular",
                "high standards in",
                "high-payoff",
                "hyperscale",
                "high-quality",
                "highly efficient",
                "holistic",
                "impactful",
                "inexpensive",
                "innovative",
                "installed base",
                "integrated",
                "interactive",
                "interdependent",
                "intermandated",
                "interoperable",
                "intuitive",
                "just in time",
                "leading-edge",
                "leveraged",
                "long-term high-impact",
                "low-risk high-yield",
                "magnetic",
                "maintainable",
                "market positioning",
                "market-driven",
                "mission-critical",
                "multidisciplinary",
                "multifunctional",
                "multimedia based",
                "next-generation",
                "on-demand",
                "one-to-one",
                "open-source",
                "optimal",
                "orthogonal",
                "out-of-the-box",
                "pandemic",
                "parallel",
                "performance based",
                "plug-and-play",
                "premier",
                "premium",
                "principle-centered",
                "proactive",
                "process-centric",
                "professional",
                "progressive",
                "prospective",
                "quality",
                "real-time",
                "reliable",
                "resource-sucking",
                "resource-maximizing",
                "resource-leveling",
                "revolutionary",
                "robust",
                "scalable",
                "seamless",
                "stand-alone",
                "standardized",
                "standards compliant",
                "state of the art",
                "sticky",
                "strategic",
                "superior",
                "sustainable",
                "synergistic",
                "tactical",
                "team building",
                "team driven",
                "technically sound",
                "timely",
                "top-line",
                "transparent",
                "turnkey",
                "ubiquitous",
                "unique",
                "user-centric",
                "user friendly",
                "value-added",
                "vertical",
                "viral",
                "virtual",
                "visionary",
                "web-enabled",
                "wireless",
                "world-class",
                "worldwide",
            ],
        "nouns" :
            [
                "action items",
                "alignments",
                "applications",
                "architectures",
                "bandwidth",
                "benefits",
                "best practices",
                "catalysts for change",
                "channels",
                "clouds",
                "collaboration and idea-sharing",
                "communities",
                "content",
                "convergence",
                "core competencies",
                "customer service",
                "data",
                "deliverables",
                "e-business",
                "e-commerce",
                "e-markets",
                "e-tailers",
                "e-services",
                "experiences",
                "expertise",
                "functionalities",
                "fungibility",
                "growth strategies",
                "human capital",
                "ideas",
                "imperatives",
                "infomediaries",
                "information",
                "infrastructures",
                "initiatives",
                "innovation",
                "intellectual capital",
                "interfaces",
                "internal or “organic” sources",
                "leadership",
                "leadership skills",
                "manufactured products",
                "markets",
                "materials",
                "meta-services",
                "methodologies",
                "methods of empowerment",
                "metrics",
                "mindshare",
                "models",
                "networks",
                "niches",
                "niche markets",
                "nosql",
                "opportunities",
                "“outside the box” thinking",
                "outsourcing",
                "paradigms",
                "partnerships",
                "platforms",
                "portals",
                "potentialities",
                "process improvements",
                "processes",
                "products",
                "quality vectors",
                "relationships",
                "resources",
                "results",
                "ROI",
                "scenarios",
                "schemas",
                "scrums",
                "services",
                "solutions",
                "sources",
                "sprints",
                "strategic theme areas",
                "storage",
                "supply chains",
                "synergy",
                "systems",
                "technologies",
                "technology",
                "testing procedures",
                "total linkage",
                "users",
                "value",
                "vortals",
                "web-readiness",
                "web services",
                "wins",
                "virtualization",
            ],
        "transitionals" :
            [
                "and",
                "then",
                "to",
            ],
    }

sentences_per_paragraph = 3
nr_paragraphs = 1
split_sentence_prob = 0.75

#+
# Generation algorithm
#-

def get_word(category) :
    "returns a random word from the specified category."
    return \
        random.choice(words[category])
#end get_word

def capitalize_first(s) :
    return \
        s[0].upper() + s[1:]
#end capitalize_first

def create_ipsum(nr_sentences) :
    result = ""
    last_was_split = False
    for i in range(nr_sentences) :
        is_full_sentence = random.random() < split_sentence_prob
        adverb = get_word("adverbs")
        verb = get_word("verbs")
        adjective = get_word("adjectives")
        noun = get_word("nouns")
        if not last_was_split :
            adverb = capitalize_first(adverb)
            if len(result) != 0 :
                result += " "
            #end if
        #end if
        result += " ".join((adverb, verb, adjective, noun))
        last_was_split = is_full_sentence and i != nr_sentences - 1
        if last_was_split :
            transitional = get_word("transitionals")
            result += ", " + transitional + " "
        else :
            result += "."
        #end if
    #end for
    return \
        result
#end create_ipsum

#+
# Mainline
#-

opts, args = getopt.getopt \
  (
    sys.argv[1:],
    "n:p:s:",
    ()
  )
for keyword, value in opts :
    if keyword == "-n" :
        sentences_per_paragraph = int(value)
        if sentences_per_paragraph < 1 :
            raise getopt.GetoptError("must have at least one sentence per paragraph")
        #end if
    elif keyword == "-p" :
        nr_paragraphs = int(value)
        if sentences_per_paragraph < 1 :
            raise getopt.GetoptError("must have at least one paragraph")
        #end if
    elif keyword == "-s" :
        split_sentence_prob = float(value)
        if split_sentence_prob < 0 or split_sentence_prob > 1 :
            raise getopt.GetoptError("probability of split sentence must be in [0, 1]")
        #end if
    #end if
#end for
if len(args) != 0 :
    raise getopt.GetoptError("no args expected")
#end if

for i in range(nr_paragraphs) :
    sys.stdout.write(create_ipsum(sentences_per_paragraph))
    sys.stdout.write("\n\n")
#end for
